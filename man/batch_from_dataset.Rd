% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataset_iterators.R
\name{batch_from_dataset}
\alias{batch_from_dataset}
\alias{is_out_of_range_error}
\title{Tensors for iterating over batches of a dataset.}
\usage{
batch_from_dataset(dataset, features = NULL, response = NULL,
  names = FALSE)

is_out_of_range_error()
}
\arguments{
\item{dataset}{A dataset}

\item{features}{Features to include.}

\item{response}{Response variable (required when \code{features} is specified).}

\item{names}{\code{TRUE} to yield features as a named list; \code{FALSE}
to stack features into a single array. Note that in the case of \code{FALSE}
all features will be stacked into a single 2D tensor so need to have the
same underlying data type.}
}
\value{
Tensors that can be evaluated to yield the next batch of training data.

When \code{features} is specified the tensor will have a structure of either:
\itemize{
\item \code{list(list(feature_name = feature_value, ...), response_value)} when
\code{names} is \code{TRUE}; or
\item \code{list(features_array, response_value)} when \code{names} is \code{FALSE},
where \code{features_array} is a Rank 2 array of (batch_size, num_features).
}

When \code{features} is not specified the tensors will conform to the
shape and types of the dataset (see \code{\link[=output_shapes]{output_shapes()}} and \code{\link[=output_types]{output_types()}}).
}
\description{
Tensor or list(s) of tensors (e.g. for named features and response)
that yield the next batch of data each time they are evaluated.
}
\section{Batch Iteration}{


In many cases you won't need to directly evaluate the batch tensors,
rather, you will pass the tensors to another function that will perform
the evaluation (e.g. the Keras \code{layer_input()} and \code{compile()} functions).

If you do need to perform iteration manually by evaluating the tensors,
a runtime error will occur when the iterator has exhausted all available elements.
You can use the \code{is_out_of_range_error()} to distinguish this error from other
errors which may have occurred. For example:\preformatted{library(tfdatasets)
sess <- tf$Session()
dataset <- tensors_dataset(1:10)
batch <- batch_from_dataset(dataset)
tryCatch({
  while(TRUE) {
    batch_values <- sess$run(batch)
    print(batch_values)
  }
},
error = function(e) {
  if (!is_out_of_range_error())
    stop(e)
})
}
}

